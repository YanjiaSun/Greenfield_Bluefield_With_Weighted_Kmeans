<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='customer_demand' inline='true' name='federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='customer_demand' name='textscan.06iyzv805fdl4k1dp77vw147tglj'>
            <connection class='textscan' directory='C:/Users/ecimren' filename='customer_demand.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.06iyzv805fdl4k1dp77vw147tglj' name='customer_demand.csv' table='[customer_demand#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CUSTOMER_NAME' ordinal='0' />
            <column datatype='real' name='LATITUDE' ordinal='1' />
            <column datatype='real' name='LONGITUDE' ordinal='2' />
            <column datatype='integer' name='DEMAND_IN_PALLETS' ordinal='3' />
            <column datatype='string' name='LATITUDE_LONGITUDE' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_NAME]</local-name>
            <parent-name>[customer_demand.csv]</parent-name>
            <remote-alias>CUSTOMER_NAME</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[customer_demand.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[customer_demand.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEMAND_IN_PALLETS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEMAND_IN_PALLETS]</local-name>
            <parent-name>[customer_demand.csv]</parent-name>
            <remote-alias>DEMAND_IN_PALLETS</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE_LONGITUDE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LATITUDE_LONGITUDE]</local-name>
            <parent-name>[customer_demand.csv]</parent-name>
            <remote-alias>LATITUDE_LONGITUDE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[customer_demand.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Customer Name' datatype='string' name='[CUSTOMER_NAME]' role='dimension' type='nominal' />
      <column caption='Demand In Pallets' datatype='integer' name='[DEMAND_IN_PALLETS]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Latitude Longitude' datatype='string' name='[LATITUDE_LONGITUDE]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.473555' measure-ordering='alphabetic' measure-percentage='0.526445' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='customers with clusters' inline='true' name='csv.1ktb0nq1sug2cf1aida3u1wyyyeu' version='10.4'>
      <connection character-set='65001' class='csv' directory='C:/Users/ecimren/PycharmProjects/Greenfield_With_Weighted_Kmeans/data/results' driver='' filename='customers_with_clusters.csv' header='yes' password='' separator=',' server=''>
        <relation connection='csv.1ktb0nq1sug2cf1aida3u1wyyyeu' name='Custom SQL Query' type='text'>select * from [customers_with_clusters.csv]</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CUSTOMER_NAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CUSTOMER_NAME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEMAND</remote-name>
            <remote-type>3</remote-type>
            <local-name>[DEMAND]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>DEMAND</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE_LONGITUDE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LATITUDE_LONGITUDE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>LATITUDE_LONGITUDE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLUSTER</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CLUSTER]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CLUSTER</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLUSTER_LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CLUSTER_LATITUDE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CLUSTER_LATITUDE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLUSTER_LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CLUSTER_LONGITUDE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CLUSTER_LONGITUDE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER_OF_CUSTOMERS_IN_A_CLUSTER</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NUMBER_OF_CUSTOMERS_IN_A_CLUSTER]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>NUMBER_OF_CUSTOMERS_IN_A_CLUSTER</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEIGHTED_DISTANCE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WEIGHTED_DISTANCE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>WEIGHTED_DISTANCE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ITERATION</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ITERATION]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>ITERATION</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBJECTIVE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OBJECTIVE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>OBJECTIVE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER_OF_CLUSTERS</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NUMBER_OF_CLUSTERS]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>NUMBER_OF_CLUSTERS</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' datatype='real' name='[CLUSTER_LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[CLUSTER_LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.328413' measure-ordering='alphabetic' measure-percentage='0.671587' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='customer demand'>
      <table>
        <view>
          <datasources>
            <datasource caption='customer_demand' name='federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4'>
            <column caption='Customer Name' datatype='string' name='[CUSTOMER_NAME]' role='dimension' type='nominal' />
            <column caption='Demand In Pallets' datatype='integer' name='[DEMAND_IN_PALLETS]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[CUSTOMER_NAME]' derivation='Attribute' name='[attr:CUSTOMER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEMAND_IN_PALLETS]' derivation='Avg' name='[avg:DEMAND_IN_PALLETS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATITUDE]' derivation='None' name='[none:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='None' name='[none:LONGITUDE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4].[avg:DEMAND_IN_PALLETS:qk]' />
              <tooltip column='[federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4].[attr:CUSTOMER_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4].[none:LATITUDE:qk]</rows>
        <cols>[federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4].[none:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='customer demand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4].[avg:DEMAND_IN_PALLETS:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4].[none:CUSTOMER_NAME:nk]</field>
            <field>[federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4].[none:DEMAND_IN_PALLETS:qk]</field>
            <field>[federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4].[none:LATITUDE:qk]</field>
            <field>[federated.1mhpn1l0m55pfk1ff7fdx1dn6lp4].[none:LONGITUDE:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='customer demand' width='192'>
      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
      ZLwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
